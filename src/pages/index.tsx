import type { NextPage } from 'next'
import Head from 'next/head'
import { 
  Flex, 
  Box, 
  Text, 
  Input, 
  Button,
  InputGroup, 
  InputRightElement,
  VStack
} from '@chakra-ui/react'
import { useEffect, useState } from 'react'
import { Tasks } from '../components/Tasks'
import { useToast } from '@chakra-ui/react'

const Home: NextPage = () => {

  const [text, setText] = useState('')
  const [tasks, setTasks] = useState<string[]>([])
  const [taskForEdit, setTaskForEdit] = useState<string>('')
  const toast = useToast()

  useEffect(() => {
    const task = JSON.parse(localStorage.getItem('tasks') || '[]')
    if (task.length > 0) {
      setTasks(task)
    }
  }, [])

  function addTask() {

    if (!text) {
      toast({
        title: 'Erro.',
        description: "Não é possível adicionar tarefas vazias!",
        status: 'error',
        duration: 3000,
        isClosable: true,
      })
      return
    }
    
    localStorage.setItem('tasks', JSON.stringify([...tasks, text]))
    
    var allTasks: string[] = JSON.parse(localStorage.getItem('tasks') || '[]')

    if (taskForEdit) {
      allTasks = allTasks.filter(item => item !== taskForEdit)
      localStorage.setItem('tasks', JSON.stringify(allTasks))
    }
      

    setTasks(allTasks)
    setText('')

    toast({
      title: 'Sucesso.',
      description: "Tarefa adicionada!",
      status: 'success',
      duration: 3000,
      isClosable: true,
    })

  }

  function editTask(task: string) {
    const allTasks = JSON.parse(localStorage.getItem('tasks') || '[]')
    const selectedTask = allTasks.find((item: string) => item == task)
    setText(selectedTask)
    setTaskForEdit(selectedTask)
  }

  function removeTask(task: string) {
    const allTasks = JSON.parse(localStorage.getItem('tasks') || '[]')
    const filteredTasks = allTasks.filter((item: string) => item != task)

    localStorage.setItem('tasks', JSON.stringify(filteredTasks))
    setTasks(filteredTasks)
  }

  return (
    <Box>
      <Head>
        <title>Tasks</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Flex
        justify='center'
        alignItems='center'
        mt='16'
        flexDir='column'
      >
        <Box
          w={550}
          backgroundColor='gray.800'
          color='white'
          px='8'
          py='8'
          rounded='2xl'
          mb='8'
        >
          <Text 
            fontSize='3xl'
            fontWeight='bold'
            mb='4'
          >
            TASK
          </Text>

          <InputGroup
            size='md'
            w='auto'
          >
            <Input 
              placeholder='Digite uma tarefa' 
              size='md'
              backgroundColor='white'
              color='black'
              value={text}
              onChange={e => setText(e.target.value)}
            />
            <InputRightElement
              w='5.5rem'
            >
              <Button 
                colorScheme='teal' 
                variant='solid'
                onClick={addTask}
              >
                Adicionar
              </Button>
            </InputRightElement>
          </InputGroup>

        </Box>

        <VStack>
          {
            tasks.map((task, index) => {
              return (
                <Tasks 
                  task={task}
                  key={index}
                  editTask={editTask}
                  removeTask={removeTask}
                />
              )
            })
          }
        </VStack>

      </Flex>

    </Box>
  )
}

export default Home
